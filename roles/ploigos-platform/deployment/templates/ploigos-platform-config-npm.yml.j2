apiVersion: v1
kind: ConfigMap
metadata:
  name: ploigos-platform-config-npm
  namespace: {{ ploigos_namespace }}
data:
  config.yml: |
    step-runner-config:
      config-decryptors:
      - implementer: SOPS

      global-defaults:
        tls-verify: {{ platform_tls_verify }}
        container-registries:
{% if 'quay' in (all_services_details | list) %}
          {{ all_services_details.quay.url }}:
{% else %}
          {{ all_services_details.nexus_containers.docker_url }}:
{% endif %}
            username: "{{ ploigos_service_account.username }}"
          registry.redhat.io:
            username: "{{ rhio_username }}"
      global-environment-defaults:
        DEV:
          kube-app-domain: dev.apps.{{ full_cluster_name }}
        TEST:
          kube-app-domain: test.apps.{{ full_cluster_name }}
        PROD:
          kube-app-domain: apps.{{ full_cluster_name }}

      generate-metadata:
      - implementer: Npm
      - implementer: Git
      - implementer: SemanticVersion

      tag-source:
      - implementer: Git
        config:
          git-username: {{ ploigos_service_account.username }}

      unit-test:
      - implementer: NpmTest
        config:
          install-first: True

      package:
      - implementer: NpmPackage

      static-code-analysis:
      - implementer: SonarQube
        config:
          url: {{ all_services_details.sonarqube.url }}/
          username: {{ ploigos_service_account.username }}

      push-artifacts:
      - implementer: NpmPushArtifacts
        config:
          npm-registry: {{ all_services_details.nexus_artifacts.url }}/repository/npm-internal/
          npm-user: {{ ploigos_service_account.username }}

      create-container-image:
      - implementer: Buildah

      push-container-image:
      - implementer: Skopeo
        config:
{% if 'quay' in (all_services_details | list) %}
          destination-url: {{ all_services_details.quay.url }}
{% else %}
          destination-url: {{ all_services_details.nexus_containers.docker_url }}
{% endif %}
      sign-container-image:
      - implementer: PodmanSign
        config:
          container-image-signature-server-url: {{ all_services_details.nexus_artifacts.url }}/repository/container-image-signatures
          container-image-signature-server-username: ploigos

      deploy:
      - implementer: ArgoCD
        config:
          argocd-api: argocd-server.{{ ploigos_namespace }}.svc.cluster.local
          argocd-username: {{ ploigos_service_account.username }}
          argocd-skip-tls: True
          git-username: {{ ploigos_service_account.username }}
          git-email: 'napsspo+ploigos@redhat.com'
          argocd-sync-timeout-seconds: 130

      validate-environment-configuration:
      - implementer: ConfiglintFromArgocd

      report:
      - implementer: ResultArtifactsArchive
        config:
          results-archive-destination-url: {{ all_services_details.nexus_artifacts.url }}/repository/result-artifacts-archive
          results-archive-destination-username: ploigos
